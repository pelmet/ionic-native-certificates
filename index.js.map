{"version":3,"sources":["../../../src/@ionic-native/plugins/certificates/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,OAAA,EAAS,iBAAA,EAAmB,MAAA,EAAO,MAAO,oBAAA,CAAqB;AAExE,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAE3C;;;;;;;;;;;;;;;GAeG;AASH,IAAa,YAAY;IAAS,gCAAiB;IAAnD;;IAeA,CAAC;IAdC;;;OAGG;IAEH,yCAAkB,GAAlB,UAAmB,oBAA6B;QAC9C,MAAM,CAAC;IACT,CAAC;IAOH,mBAAC;AAAD,CAfA,AAeC,CAfiC,iBAAiB,GAelD;AANM,uBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,2BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AARA;IADC,OAAO,EAAE;;;;sDAGT;AARU,YAAY;IARxB,MAAM,CAAC;QACN,UAAU,EAAE,cAAc;QAC1B,MAAM,EAAE,6BAA6B;QACrC,SAAS,EAAE,8BAA8B;QACzC,IAAI,EAAE,wDAAwD;QAC9D,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;KAC9B,CAAC;GAEW,YAAY,CAexB;SAfY,YAAY","file":"index.js","sourceRoot":"","sourcesContent":["import { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\nimport { Injectable } from '@angular/core';\n\n/**\n * @name Certificates\n * @description Cordova plugin to configure SSL certificates, currently used to enable usage of untrusted aka self-signed SSL certificates.\n *\n * @usage\n * ```typescript\n * import { Certificates } from '@ionic-native/certificates';\n *\n *\n * constructor(private certificates: Certificates) { }\n *\n * ...\n *\n * this.certificates.trustUnsecureCerts(true);\n * ```\n */\n@Plugin({\n  pluginName: 'Certificates',\n  plugin: 'cordova-plugin-certificates',\n  pluginRef: 'cordova.plugins.certificates',\n  repo: 'https://github.com/hypery2k/cordova-certificate-plugin',\n  platforms: ['Android', 'iOS']\n})\n\nexport class Certificates extends IonicNativePlugin {\n  /**\n   * Activates or deactivates the acceptance of self signed/unsecure SSL certificates\n   * @param {boolean} boolActivateUnsecure boolean value to set desired behaviour\n   */\n  @Cordova()\n  trustUnsecureCerts(boolActivateUnsecure: boolean) {\n    return;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}